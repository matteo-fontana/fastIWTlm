The goal of this project is to translate from R into C++ an algorithm that solves intervalwise T^2 testing problems, which was coded only for checking its theoretical consistency, without caring of its computational efficiency, so that it is of very little use when the dimensions grow, due to the extremely long execution times. As a consequence, our target is also to optimize the code as much as possible, by taking advantage of some advanced programming techniques of C++, such as the \texttt{Eigen} library and the OpenMP parallelization. Speeding this code up is crucial also because it relies on Monte Carlo methods, which require the larger possible number of iterations to come up with good results. In the end, we managed to reduce the execution times by two orders of magnitude, thus allowing the use of the algorithm in most applications.